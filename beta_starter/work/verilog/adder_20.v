/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_20 (
    input [31:0] a,
    input [31:0] b,
    input [5:0] alufn_signal,
    output reg [31:0] out,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  
  wire [32-1:0] M_ttba_s;
  wire [1-1:0] M_ttba_co;
  reg [32-1:0] M_ttba_a;
  reg [32-1:0] M_ttba_b;
  reg [1-1:0] M_ttba_ci;
  thirtytwobit_rca_28 ttba (
    .a(M_ttba_a),
    .b(M_ttba_b),
    .ci(M_ttba_ci),
    .s(M_ttba_s),
    .co(M_ttba_co)
  );
  
  always @* begin
    M_ttba_a = a;
    M_ttba_b = b ^ {6'h20{alufn_signal[0+0-:1]}};
    M_ttba_ci = alufn_signal[0+0-:1];
    out = M_ttba_s;
    v = (a[31+0-:1] & ((b[31+0-:1] ^ alufn_signal[0+0-:1])) & ~M_ttba_s[31+0-:1]) | (~a[31+0-:1] & ~(b[31+0-:1] ^ alufn_signal[0+0-:1]) & M_ttba_s[31+0-:1]);
    z = ((~((|M_ttba_s))) == 1'h1) ? 1'h1 : 1'h0;
    n = (M_ttba_s[31+0-:1] == 1'h1) ? 1'h1 : 1'h0;
  end
endmodule
