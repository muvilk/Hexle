/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module beta_cpu_7 (
    input clk,
    input slowclk,
    input rst,
    input irq,
    input [31:0] instruction,
    input [31:0] mem_data_input,
    output reg [31:0] ia,
    output reg [31:0] mem_data_address,
    output reg [31:0] mem_data_output,
    output reg wr,
    output reg [63:0] debug
  );
  
  
  
  wire [3-1:0] M_control_system_pcsel;
  wire [1-1:0] M_control_system_wasel;
  wire [1-1:0] M_control_system_asel;
  wire [1-1:0] M_control_system_ra2sel;
  wire [1-1:0] M_control_system_bsel;
  wire [6-1:0] M_control_system_alufn;
  wire [2-1:0] M_control_system_wdsel;
  wire [1-1:0] M_control_system_werf;
  wire [1-1:0] M_control_system_wr;
  reg [1-1:0] M_control_system_irq;
  reg [1-1:0] M_control_system_z;
  reg [6-1:0] M_control_system_opcode;
  reg [1-1:0] M_control_system_slowclk;
  reg [1-1:0] M_control_system_ia31;
  control_unit_14 control_system (
    .clk(clk),
    .rst(rst),
    .irq(M_control_system_irq),
    .z(M_control_system_z),
    .opcode(M_control_system_opcode),
    .slowclk(M_control_system_slowclk),
    .ia31(M_control_system_ia31),
    .pcsel(M_control_system_pcsel),
    .wasel(M_control_system_wasel),
    .asel(M_control_system_asel),
    .ra2sel(M_control_system_ra2sel),
    .bsel(M_control_system_bsel),
    .alufn(M_control_system_alufn),
    .wdsel(M_control_system_wdsel),
    .werf(M_control_system_werf),
    .wr(M_control_system_wr)
  );
  
  wire [32-1:0] M_alu_system_out;
  wire [3-1:0] M_alu_system_zvn;
  reg [32-1:0] M_alu_system_a;
  reg [32-1:0] M_alu_system_b;
  reg [6-1:0] M_alu_system_alufn_signal;
  alu_15 alu_system (
    .a(M_alu_system_a),
    .b(M_alu_system_b),
    .alufn_signal(M_alu_system_alufn_signal),
    .out(M_alu_system_out),
    .zvn(M_alu_system_zvn)
  );
  
  wire [1-1:0] M_regfile_system_z;
  wire [32-1:0] M_regfile_system_reg_data_1;
  wire [32-1:0] M_regfile_system_reg_data_2;
  wire [32-1:0] M_regfile_system_mwd;
  reg [5-1:0] M_regfile_system_ra;
  reg [5-1:0] M_regfile_system_rb;
  reg [5-1:0] M_regfile_system_rc;
  reg [1-1:0] M_regfile_system_wasel;
  reg [1-1:0] M_regfile_system_ra2sel;
  reg [1-1:0] M_regfile_system_werf;
  reg [32-1:0] M_regfile_system_wdsel_out;
  reg [1-1:0] M_regfile_system_slowclk;
  regfile_unit_16 regfile_system (
    .clk(clk),
    .rst(rst),
    .ra(M_regfile_system_ra),
    .rb(M_regfile_system_rb),
    .rc(M_regfile_system_rc),
    .wasel(M_regfile_system_wasel),
    .ra2sel(M_regfile_system_ra2sel),
    .werf(M_regfile_system_werf),
    .wdsel_out(M_regfile_system_wdsel_out),
    .slowclk(M_regfile_system_slowclk),
    .z(M_regfile_system_z),
    .reg_data_1(M_regfile_system_reg_data_1),
    .reg_data_2(M_regfile_system_reg_data_2),
    .mwd(M_regfile_system_mwd)
  );
  
  wire [32-1:0] M_pc_system_pc_4;
  wire [32-1:0] M_pc_system_pc_4_sxtc;
  wire [32-1:0] M_pc_system_pcsel_out;
  wire [32-1:0] M_pc_system_ia;
  reg [1-1:0] M_pc_system_slowclk;
  reg [16-1:0] M_pc_system_id;
  reg [3-1:0] M_pc_system_pcsel;
  reg [32-1:0] M_pc_system_reg_data_1;
  pc_unit_17 pc_system (
    .clk(clk),
    .rst(rst),
    .slowclk(M_pc_system_slowclk),
    .id(M_pc_system_id),
    .pcsel(M_pc_system_pcsel),
    .reg_data_1(M_pc_system_reg_data_1),
    .pc_4(M_pc_system_pc_4),
    .pc_4_sxtc(M_pc_system_pc_4_sxtc),
    .pcsel_out(M_pc_system_pcsel_out),
    .ia(M_pc_system_ia)
  );
  
  reg [31:0] asel_out;
  
  reg [31:0] bsel_out;
  
  reg [31:0] wdsel_out;
  
  always @* begin
    ia = 1'h0;
    mem_data_address = 1'h0;
    mem_data_output = 1'h0;
    wr = 1'h0;
    debug = 64'h0000000000000000;
    M_control_system_irq = 1'h0;
    M_control_system_slowclk = 1'h0;
    M_control_system_ia31 = 1'h0;
    M_control_system_opcode = 1'h0;
    M_control_system_z = 1'h0;
    M_regfile_system_ra2sel = 1'h0;
    M_regfile_system_wasel = 1'h0;
    M_regfile_system_ra = 1'h0;
    M_regfile_system_rb = 1'h0;
    M_regfile_system_rc = 1'h0;
    M_regfile_system_werf = 1'h0;
    M_regfile_system_slowclk = 1'h0;
    M_pc_system_slowclk = 1'h0;
    M_pc_system_id = 1'h0;
    M_pc_system_reg_data_1 = 1'h0;
    M_pc_system_pcsel = 1'h0;
    M_alu_system_alufn_signal = M_control_system_alufn;
    
    case (M_control_system_asel)
      1'h0: begin
        asel_out = M_regfile_system_reg_data_1;
      end
      1'h1: begin
        asel_out = {1'h0, M_pc_system_pc_4_sxtc[0+30-:31]};
      end
      default: begin
        asel_out = M_regfile_system_reg_data_1;
      end
    endcase
    
    case (M_control_system_bsel)
      1'h0: begin
        bsel_out = M_regfile_system_reg_data_2;
      end
      1'h1: begin
        bsel_out = {instruction[15+0-:1], instruction[0+15-:16]};
      end
      default: begin
        bsel_out = M_regfile_system_reg_data_2;
      end
    endcase
    
    case (M_control_system_wdsel)
      2'h0: begin
        wdsel_out = M_pc_system_pc_4;
      end
      2'h1: begin
        wdsel_out = M_alu_system_out;
      end
      2'h2: begin
        wdsel_out = mem_data_input;
      end
      default: begin
        wdsel_out = M_alu_system_out;
      end
    endcase
    M_alu_system_a = asel_out;
    M_alu_system_b = bsel_out;
    M_regfile_system_wdsel_out = wdsel_out;
    ia = M_pc_system_ia;
    mem_data_address = M_alu_system_out;
    mem_data_output = M_regfile_system_reg_data_2;
    wr = M_control_system_wr;
    M_control_system_irq = irq;
    M_control_system_slowclk = slowclk;
    M_control_system_ia31 = M_pc_system_ia[31+0-:1];
    M_control_system_opcode = instruction[26+5-:6];
    M_control_system_z = M_regfile_system_z;
    M_pc_system_slowclk = slowclk;
    M_pc_system_id = instruction[0+15-:16];
    M_pc_system_reg_data_1 = M_regfile_system_reg_data_1;
    M_pc_system_pcsel = M_control_system_pcsel;
    M_regfile_system_ra2sel = M_control_system_ra2sel;
    M_regfile_system_wasel = M_control_system_wasel;
    M_regfile_system_ra = instruction[16+4-:5];
    M_regfile_system_rb = instruction[11+4-:5];
    M_regfile_system_rc = instruction[21+4-:5];
    M_regfile_system_werf = M_control_system_werf;
    M_regfile_system_slowclk = slowclk;
    debug[0+0+15-:16] = M_pc_system_pcsel_out[0+15-:16];
    debug[16+0+15-:16] = asel_out[0+15-:16];
    debug[32+0+15-:16] = bsel_out[0+15-:16];
    debug[48+0+15-:16] = wdsel_out[0+15-:16];
  end
endmodule
