module sig_processor (
    input seg_sig[7], // [6:5] = register; [4:3] = digit; [2:0] = pin A-G
    input rgb_sig[4], // [3:2] = register; [1:0] = digit
    input sd[16], // segment data from register
    input cd[16], // rgb data from register
    input cb, // high contrast signal
    
    output sa[4], // digit data extracted from requested segment register
    output ca[4], // rgb data extracted from requested rgb register
    output cur_seg,
    output cur_rgb[3]
  ) {

  sig_interpreter int; // translate clock signal to get relevant regfile address
  sig_selector sel; // translate regfile data to extract current outputs using clock signal
  
  always {
    
    int.seg_sig = seg_sig;
    int.rgb_sig = rgb_sig;
    
    sel.sd = sd;
    sel.cd = cd;
    sel.seg_sig = seg_sig;
    sel.rgb_sig = rgb_sig;
    sel.cb = cb;
    
    sa = int.sa;
    ca = int.ca;
    
    cur_seg = sel.cur_seg;
    cur_rgb = sel.cur_rgb;
    
  }
}
